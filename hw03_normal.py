# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1

def fibonacci(n, m):
    fib = []
    a, b = 0, 1
    for num in range(m):
        fib.append(b)
        a, b = b, a+b
    n -= 1
    res = [fib[i] for i in range(n, m)]
    print(res)

fibonacci(4, 8)


# Задача-2:
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort()

def sort_to_max(*args):
    li = list(args)
    n = len(args)
    for j in range(0, n - 1):
        for i in range(0, n-j-1):
            if li[i] > li[i+1]:
                li[i], li[i+1] = li[i+1], li[i]
    print(li)

sort_to_max(*[2, 10, -12, 2.5, 20, -11, 4, 4, 0])

# Задача-3:
# Напишите собственную реализацию стандартной функции filter.
# Разумеется, внутри нельзя использовать саму функцию filter.


# Задача-4:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4).
# Определить, будут ли они вершинами параллелограмма.
import math
def isparall(a, b, c, d):
    '''
    Проверка признаков параллелограмма
    '''
    p1 = True
    p2 = True

    '''
    Противополжные стороны параллельны и равны
    '''
    ab = math.sqrt((b[0] - a[0])**2 + (b[1] - a[1])**2)
    dc = math.sqrt((c[0] - d[0])**2 + (c[1] - d[1])**2)
    ad = math.sqrt((d[0] - a[0])**2 + (d[1] - a[1])**2)
    bc = math.sqrt((c[0] - b[0])**2 + (c[1] - b[1])**2)
    if ab == dc and bc == ad:
        p1 = True
    else:
        p1 = False

    '''
    Диагонали O1 и O2 в точках пересечения делятся пополам и равны
    '''
    h1 = ((a[0] + c[0])/2, (a[1] + c[1])/2)
    h2 = ((b[0] + d[0])/2, (b[1] + d[1])/2)
    if h1 == h2:
        p2 = True
    else:
        p2 = False

    if p1 and p2:
        print('образуют параллелограмм')
    else:
        print('не образуют параллелограмм')

A1, A2, A3, A4 = (2, 3), (0, 2), (4, 1), (6, 2)
isparall(A1, A2, A3, A4)

